<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Techology &amp; Finance</title><link href="/" rel="alternate"></link><link href="/feeds/tools.atom.xml" rel="self"></link><id>/</id><updated>2014-08-21T00:00:00+02:00</updated><entry><title>Git小技巧.md</title><link href="/gitxiao-ji-qiao-md.html" rel="alternate"></link><updated>2014-08-21T00:00:00+02:00</updated><author><name>Qian Zhu</name></author><id>tag:,2014-08-21:gitxiao-ji-qiao-md.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;git push origin :temp  -- 删除remote的temp branch。意思是用空的branch替换temp branch&lt;/li&gt;
&lt;/ol&gt;</summary><category term="git"></category><category term="tools"></category></entry><entry><title>Pratical Vim</title><link href="/pratical_vim.html" rel="alternate"></link><updated>2014-07-19T00:00:00+02:00</updated><author><name>Qian Zhu</name></author><id>tag:,2014-07-19:pratical_vim.html</id><summary type="html">&lt;h1&gt;What is the idea behind vim?&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Vim is optimized for repetition.Act,repeat, reverse &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;vim不是一大堆插件以及一大堆的命令。很多人觉得vim难以上手也是因为不了解vim的精髓。Dot command 是vim中处理重复操作基本命令.需要注意的是"."重复上一组&lt;strong&gt;修改&lt;/strong&gt;而不是&lt;strong&gt;跳转&lt;/strong&gt;的动作&lt;/p&gt;
&lt;p&gt;举个例子:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Keystrokes&lt;/th&gt;
&lt;th&gt;Buffer Contents&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;{start}&lt;/td&gt;
&lt;td&gt;...We're waiting for content before the site can go live If you are &lt;strong&gt;c&lt;/strong&gt;ontent with this, let's go ahead with it We'll launch as soon as we have the content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;*&lt;/td&gt;
&lt;td&gt;...We're waiting for &lt;strong&gt;content&lt;/strong&gt; before the site can go live.If you are &lt;strong&gt;content&lt;/strong&gt; with this, let's go ahead with it.We'll launch as soon as we have the &lt;strong&gt;content&lt;/strong&gt;...&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cwcopy&lt;Esc&gt;&lt;/td&gt;
&lt;td&gt;...We're waiting for content before the site can go live.If you are content with this, let's go ahead with it.We'll launch as soon as we have the &lt;strong&gt;copy&lt;/strong&gt;...&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;n&lt;/td&gt;
&lt;td&gt;...We're waiting for &lt;strong&gt;content&lt;/strong&gt; before the site can go live.If you are &lt;strong&gt;content&lt;/strong&gt; with this, let's go ahead with it.We'll launch as soon as we have the copy...&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.&lt;/td&gt;
&lt;td&gt;...We're waiting for &lt;strong&gt;copy&lt;/strong&gt; before the site can go live.If you are content with this, let's go ahead with it.We'll launch as soon as we have the copy...&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;Compose Repeatable Changes&lt;/h1&gt;
&lt;p&gt;Suppose our cursor is positioned on the "h", and we want to delete the word "nigh"&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The end is nigh&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Method 1:&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Keystrokes&lt;/th&gt;
&lt;th&gt;Buffer Contents&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;{start}&lt;/td&gt;
&lt;td&gt;The end is nig&lt;strong&gt;h&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;db&lt;/td&gt;
&lt;td&gt;The end is h&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt;The end is&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;"." repeat "x"&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Method 2:&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Keystrokes&lt;/th&gt;
&lt;th&gt;Buffer Contents&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;{start}&lt;/td&gt;
&lt;td&gt;The end is nig&lt;strong&gt;h&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;b&lt;/td&gt;
&lt;td&gt;The end is nigh&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;dw&lt;/td&gt;
&lt;td&gt;The end is&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;"." repeat "dw"&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Method 3:&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Keystrokes&lt;/th&gt;
&lt;th&gt;Buffer Contents&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;{start}&lt;/td&gt;
&lt;td&gt;The end is nig&lt;strong&gt;h&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;daw&lt;/td&gt;
&lt;td&gt;The end is&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;"." repeat "daw"&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Method 3 is the best one. &lt;/p&gt;
&lt;h1&gt;Register + Operator + Motion = Action&lt;/h1&gt;
&lt;p&gt;d{motion} :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dl : delete a single character&lt;/li&gt;
&lt;li&gt;daw: delete a complete word&lt;/li&gt;
&lt;li&gt;dap : delete a paragraphy&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;d,c,y 都属于operator, l,aw,ap属于motion，说明operator作用的对象。vim基本的语法就是operator + motion.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;"ayy: yank current line to register a&lt;/li&gt;
&lt;li&gt;"ayiw: yank current inner work to register a&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Operator:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;a : around 删除word,包括周边空格&lt;/li&gt;
&lt;li&gt;i : inner 删除字,但是不包括周围空格&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Register&lt;/h2&gt;
&lt;h3&gt;The Unnamed Register ("")&lt;/h3&gt;
&lt;p&gt;默认寄存器就是"", 所以&lt;strong&gt;dd&lt;/strong&gt;相当于&lt;strong&gt;""dd&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;The Yank Register : "0&lt;/h3&gt;
&lt;p&gt;yank register. 顾名思义就是在yank使会更新的register. 这个的好处就是不会被dd,diw这些命令覆盖了之前yank的内容。&lt;/p&gt;
&lt;h3&gt;The black hole register("_)&lt;/h3&gt;
&lt;p&gt;A place from which nothing returns. &lt;/p&gt;
&lt;h3&gt;More Registers:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;"% : Name of the current file&lt;/li&gt;
&lt;li&gt;"# : Name of the alternate file&lt;/li&gt;
&lt;li&gt;". : Last inserted text&lt;/li&gt;
&lt;li&gt;": : Last Ex command&lt;/li&gt;
&lt;li&gt;"/ : Last search pattern -- it can be set explicitly using &lt;em&gt;:let&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Commands&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;reg : show all register content&lt;/li&gt;
&lt;/ul&gt;</summary><category term="Tools"></category><category term="Vim"></category></entry><entry><title>How to publish a Pelican site in the form of User Pages?</title><link href="/publish-pelican.html" rel="alternate"></link><updated>2014-07-19T00:00:00+02:00</updated><author><name>Qian Zhu</name></author><id>tag:,2014-07-19:publish-pelican.html</id><summary type="html">&lt;p&gt;You need to push the cotent of &lt;strong&gt;output&lt;/strong&gt; dir generated by Pelican to the &lt;strong&gt;master branch&lt;/strong&gt; of your &lt;username&gt;.github.io repository on GitHub&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;pelicanconf&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt;
&lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;import&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;
&lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;push&lt;/span&gt; &lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//github.com/qian-zhu/qian-zhu.github.io.git gh-pages:master (--force)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;这里通过ghp-import output将output里面的内容merge到gh-pages这个branch，然后将gh-pages这个branch push到remote的master branch&lt;/p&gt;
&lt;p&gt;若已本地的文章为准，使用--force强制更新remote的branch&lt;/p&gt;
&lt;p&gt;这里，使用的是&lt;a href="https://github.com/DandyDev/pelican-bootstrap3"&gt;pelican-bootstrape3&lt;/a&gt;的theme, 可以在env/lib/python2.7/site-packages/pelica/theme对theme进行自定义&lt;/p&gt;
&lt;p&gt;deploy的步骤还可以参考&lt;a href="http://docs.getpelican.com/en/3.3.0/tips.html"&gt;官方文档&lt;/a&gt;&lt;/p&gt;</summary><category term="Tools"></category><category term="Pelican"></category></entry></feed>